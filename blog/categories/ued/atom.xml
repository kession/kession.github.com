<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ued | My Octopress Blog]]></title>
  <link href="http://yoursite.com/blog/categories/ued/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2012-10-21T23:00:10+08:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Json Return Failed]]></title>
    <link href="http://yoursite.com/blog/2012/09/28/Json-Return-Failed/"/>
    <updated>2012-09-28T00:00:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/09/28/Json-Return-Failed</id>
    <content type="html"><![CDATA[<h2>异步请求返回JSON为空常见原因</h2>

<hr />

<p><strong>问题描述:</strong>在进行异步请求的时候，有时会遇到程序完成返回，结果的JSON串为空的情况。首先确保程序Debug能return ModelAndView，一般原因有以下两种：</p>

<h3>1. Float字段转换出错导致</h3>

<p> Float类型数据在返回时可能会造成ModelAndView转换为JSON串时失败，有一个对象转换失败则整个JSON串返回为空。可以新建一Bean专门用于返回，将BO取得的对象拷贝过来。</p>

<h3>2.  Controller接受多个对象导致</h3>

<p>Controller用于接受的参数可为多个参数，但多个参数只能为基本数据类型；或者接受单一对象作为参数。多个对象作为参数传递时，可改为多个基本数据类型传递，手动new对象处理。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bp Xselect]]></title>
    <link href="http://yoursite.com/blog/2012/09/24/bp-xselect/"/>
    <updated>2012-09-24T00:00:00+08:00</updated>
    <id>http://yoursite.com/blog/2012/09/24/bp-xselect</id>
    <content type="html"><![CDATA[<p>Included file 'JB/setup' not found in _includes directory</p>

<h2>xselect</h2>

<hr />

<h3>1. 基本用法  <a href="http://setao.alibaba-inc.com/lib/lib/120.htm">详细点击</a></h3>

<p>其中<em>base</em> 为xselect父节点div ID，<strong>注意 <code>#</code></strong> ， <em>id</em>设置xselect的id，<strong>无需 <code>#</code></strong>.</p>

<pre><code>var selectDate =  [{label:'全部',value:'-1'}, {label:'新签',value:'1'},{label:'续签',value:'2'};
var sel = new Lite.ui.Xselect({
    base : '#bp-tradetype',  
    data : selectDate,
    key: {
           label: 'label',
           value: 'value'
    },
    id : 'bss-select-salesorg-ID',
    name : '_tradeType',
    css : { width : 70 },
    onChange:function(value){
        // onChange Event do something
    }
});
</code></pre>

<h3>2. 取值</h3>

<pre><code>// 取得选择项的 value 值
var v = $("#bss-select-salesorg-ID").val();
// 取得选择项的 label 值
var l = $("li.lt-menuitem[rel="+ salesOrgID +"]").html();
</code></pre>

<h3>3. json传值初始化</h3>

<pre><code>var sel = new Lite.ui.Xselect({
    base : '#selectSalesName',  
    key: {
           label: 'salesOrgName',
           value: 'salesOrgID'
    },
    id : 'bss-select-salesorg-ID',
});
s1.init(selectDate);
</code></pre>

<h3>4. 默认值</h3>

<pre><code>// 设置默认值
var selectDate = [{salesOrgName:'全部',salesOrgID:'-1'}];
selectDate = selectDate.concat(res.d.salesOrgList);
s1.init(selectDate);
// 默认选择
s1.value('-1');
</code></pre>
]]></content>
  </entry>
  
</feed>
